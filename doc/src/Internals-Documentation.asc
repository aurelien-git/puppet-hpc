[[internals-Documentation]]
= Internals - Documentation

== Main Documentation

=== Dependencies

* *asciidoctor*
* *inkscape* (for SVG to PNG conversion)

=== Generation

Main documentation (this document) uses `asciidoctor` to generate the
documentation. From the `doc/` directory a call to `make` will generate the
PDF and HTML version.

=== Modification

Chapters modification are be done in the `.asc` files in the `doc/src`
directory. To add a chapter, you must edit the main documentation file:
`doc/PuppetHPCConfiguration.asc` and add an include entry.

The included files should use the `.asc` extension, this permits GitHub to
automatically detect the format and render the pages when browsing the git
repository.

=== Figures

Figures and images should go into the `doc/src/img` directory. If there is an
SVG file without a corresponding PNG file, make will call *Inkscape* to
generate it. Only the SVG source should be in the repository.

== Puppet Documentation

=== Dependencies

* *puppet strings gem*
* *yard*

The puppet strings gem has been packaged for debian:
https://github.com/edf-hpc/ruby-puppet-strings

=== Generation

In a module directory, call the command: `puppet strings`. It will generate a
`doc/` directory with HTML pages.

== GitHub Pages

The documentation is available in the GitHub pages:
https://edf-hpc.github.io/puppet-hpc/

This set of file is in the `gh-pages` branch. This branch can be updated with a
current documentation by calling the script: `build-gh-pages.sh`.

---------------------
$ cd doc/
$ ./build-gh-pages.sh
---------------------

This script will clone the current master branch of the local repository to
a temporary location, generate the main documentation and puppet documentations
for profiles and modules. The result will be commited in the `gh-pages` branch
of the local repository.

To publish on GitHub, the branch should be pushed:

---------------------
$ git push origin gh-pages:gh-pages
---------------------

// vim: set syntax=asciidoc: 
