= Overview

Puppet-HPC is a full Puppet-based software stack designed to easily deploy HPC
clusters. http://www.puppet.com[Puppet] is a popular open-source configuration
management tool. The main goal of Puppet-HPC is to provide a common generic
configuration management system that can be used effortlessly accross multiple
HPC clusters and organizations.

The Puppet-HPC software stack notably provides:

* Many generic Puppet modules for all technical components required on a HPC
  cluster.
* Defined data model for representing the description of an HPC cluster based on
  https://docs.puppet.com/hiera/[Hiera].
* Software patterns and code conventions conform to latest Puppet community
  standards.
* Tools to easily deploy and manage the configuration with high-scalibility
  requirements.

Puppet-HPC software architecture clearly separate the code from the data. This
way, the code can be generic while the data can provide all specific contextual
information. This has many advantages:

* The code base can be re-used and the development effort is shared.
* The same code is run on many different environments, it is therefore more
  tested and more reliable.
* The code can be easily tested on a small testing environment even if the data
  is different from the production environment.

All details about the software architecture of Puppet-HPC are documented in the
<<arch,Software Architecture chapter>> of this document.

Puppet-HPC is developed and actively maintained by the CCN-HPC (_Centre de
Compétences Nationales en High Performance Computing_) of
https://www.edf.fr[EDF] (_Électrité de France_), one of the largest worldwide
producer of electricity. The software is used to deploy and maintain the
configuration of the largest HPC cluster in the company.

Puppet-HPC is open-source software licensed under the terms of GPLv2+. Any
external contribution is very welcome! It should be made under the form of a
pull request or an issue creation on the project
https://github.com/edf-hpc/puppet-hpc[GitHub repository]. Please refer to the
<<devgl, Development Guidelines>> chapter for hints on doing awesome patches.
