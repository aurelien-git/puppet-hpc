[[arch-genericity]]
== Genericity levels

The use of the Roles/Profiles pattern enables to control the level of
genericity of each element of a Puppet configuration code base. Here are the
genericity levels defined for all the components in the Puppet-HPC project:

* Roles: The code part of the roles is fully generic as it consists into one
  manifest (located under path `puppet-config/cluster/roles/manifests/init.pp`)
  which simply extract from Hiera the list of profiles included in the role.
  However, the name of the roles and the list of profiles are cluster specific
  due to technical properties of Puppet-HPC. This point is explained further in
  the <<arch-roles,roles section>>.
* Profiles are HPC specific and are highly related to the way Scibian HPC
  clusters are modeled. Nevertheless they can be reused from one cluster to
  the other. Their structure should follow the reference architecture defined in the
  https://github.com/edf-hpc/scibian-hpc-install-guide[Scibian HPC cluster
  installation guide].
* Modules are fully generic. They support multiple distributions and can even be
  used outside of the HPC clusters context when relevant.

As stated in the <<arch-hieralayers,Hiera layers section>>, the Hiera repository is
composed of multiple layers of datasets ordered by genericity levels. Then,
each layer of the hierarchy has it own genericity level depending on its
specialization.

This diagram gives a quick glance summary of the genericity levels for each
element of the Puppet-HPC stack:

[[img-components_genericity]]
.Stack components genericity goals
image::src/img/components_genericity.svg[width=500]
