[[arch-hieralayers]]
== Hiera layers

Hiera is a software designed to manage a repository of data formatted in
key/value pairs. The key is the parameter name. The values can be of various
types: string, numbers, booleans, hashes or arrays. Puppet-HPC requires to use
default Hiera YAML backend, therefore the data are stored in YAML files.

Hiera is able to look up data out of a hierarchy - hence its name - of layers
and manage overrides. This feature, combined with layers properly ordered by
genericity levels, allow to define a maximum number of parameters once for
multiple clusters and organization. The parameters are overriden in more
specialized layers only when necessary. The following diagram illustrates the
look up logic of a parameter `foo` into an example of simplified hierarchy:

[[img-hiera_layers_tree]]
.Simplified Hiera tree with specialization layers
image::src/img/hiera_layers_tree.pdf[width=600]

The typical Hiera layers to use with Puppet-HPC are the following:

* `%{cluster_name}/roles/%{puppet_role}`
* `%{cluster_name}/cluster`
* `%{cluster_name}/network`
* `organization`
* `common`

The `common` layer is directly provided by Puppet-HPC with YAML file
`hieradata/common.yaml`. The upper layers are specific to an organization or a
cluster, they must be defined in the <<arch-internalrepo,internal repository>>
documented in the next section of this documentation. Network data are separated
in a specific file (`network.yaml`) only to keep cluster YAML file readable.

The hierarchy (with all its layers) is setup in `hiera.yaml` configuration file.
An example of this file is provided with Puppet-HPC under the path
`examples/privatedata/hiera.yaml`.
