= Concepts

== Overview

////
TODO: explain what is Puppet-HPC, that it is developed and maintained by EDF.
////

== Software architecture

////
TODO: Give some insights about Puppet-HPC software architecture and its inner
workings.

Based on roles and profiles pattern, with hiera backend.

[schema]

Based on some external community modules:

* stdlib
* apache2
* eyaml
////

== Generic goal

////
TODO: explain project genericity goal. First draft could be something like:

* Modules fully generic, support multiple distributions and can be used outside
  of HPC context
* Hieradata and profiles generic to all Scibian HPC clusters following the
  reference architecture defined in [Scibian HPC cluster installation guide]
* Roles (with names and associated profiles) are specific to each cluster they
  are not defined nor provided by puppet-hpc.
////

== Internal repository

////
TODO: explain Puppet-HPC must be used in combination with a another internal
repository. Highly recommended content and structure:

* internal modules
* internal files
* internal hieradata
////

== Hieradata levels

////
TODO: give details about highly recommended levels for the internal hieradata:

* common public
* org
* cluster
* role

There is an example of such hieradata organization in example/ directory of
Puppet-hpc source code.
////

== Roles

////
TODO: explain that roles are defined in hiera. The role associated to a node is
extracted from its hostname.
////

== Cluster definition

////
TODO: how-to write a cluster definition in hiera.

* Main shared parameters
* Network parameters
* Cluster name. Also explain why not in hiera.
////

== Deployment

////
TODO: document installation mode (packages, git clones) and push and apply
scripts with refs to manpages. Explain why not puppetserver mode.
////
