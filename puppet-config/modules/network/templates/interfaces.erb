<% ########################################################################## -%>
<% #  Puppet configuration file                                             # -%>
<% #                                                                        # -%>
<% #  Copyright (C) 2014-2016 EDF S.A.                                      # -%>
<% #  Contact: CCN-HPC <dsp-cspit-ccn-hpc@edf.fr>                           # -%>
<% #                                                                        # -%>
<% #  This program is free software; you can redistribute in and/or         # -%>
<% #  modify it under the terms of the GNU General Public License,          # -%>
<% #  version 2, as published by the Free Software Foundation.              # -%>
<% #  This program is distributed in the hope that it will be useful,       # -%>
<% #  but WITHOUT ANY WARRANTY; without even the implied warranty of        # -%>
<% #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         # -%>
<% #  GNU General Public License for more details.                          # -%>
<% ########################################################################## -%>

#####################################################################
# Network interfaces configuration (Debian Operating System)
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
#####################################################################
# NOTE: This file is automatically generated by puppet.
# Changes to this file will be overwritten periodically by puppet!
#####################################################################
# TEMPLATE: {<%= @name %>}/<%= File.basename(__FILE__) %>}
#####################################################################
<% # Import Hash Tables -%>
<% require 'ipaddr' -%>
<% netconfig = scope['::network::netconfig'] -%>
<% defaultgw = scope['::network::defaultgw'] -%>
<% bondcfg   = scope['::network::bonding_options'] -%>
<% routnet   = scope['::network::routednet'] -%>
<% network_gw_set = String.new -%>
<% bndprim = String.new -%>
<% bndmode = String.new -%>
<% routecfg = Hash.new -%>
<% ctrl = 0 -%>
<%- if routnet.length > 0  -%>
  <%- routnet.each do | triplet| -%>
    <%- rcfg = triplet.split('@') -%>
    <%- if routecfg[rcfg[2].to_s].nil? -%>
      <%- routecfg[rcfg[2].to_s] = Array.new -%>
    <%- end -%>
    <%- routecfg[rcfg[2]][ctrl] = rcfg[0].to_s+'@'+rcfg[1].to_s -%>
    <%- ctrl += 1 -%>
  <%- end -%>
<%- end -%>
auto lo
iface lo inet loopback

<% netconfig.sort.map do | card, value | -%>
  <%- default_gw_set = false -%>

### <%= card %> Configuration ###
allow-hotplug <%= card %>
iface <%= card %> inet manual
  <%- if card.include?("bond") -%>
# Bonding of multiple interfaces
    <%- bondcfg[card]['options'].split(' ').each do | opt | -%>
      <%- case opt.split('=')[0] when 'mode' -%>
        <%- bndmode = opt.split('=')[1] -%>
      <%-  when 'primary' -%>
        <%- bndprim = opt.split('=')[1] -%>
      <%- end -%>
    <%- end -%>
<%= 'slaves '+bondcfg[card]['slaves'].join(' ') %>
<%= 'bond_mode'+' '+bndmode %>
    <%- bondcfg[card]['slaves'].each do | slcard| -%>
<%= 'post-up ip link set '+slcard+' up' %>
    <%- end -%>
    <%- unless bndprim.empty? -%>
<%= 'bond-primary'+' '+bndprim %>
    <%- end -%>
  <%- else -%>
# Interface not bonded
  <%- end -%>
post-up ip link set <%= card %> up
  <%- value.each do | ipadd| -%>
post-up ip addr add <%= ipadd %> dev $IFACE || true
pre-down ip addr del <%= ipadd %> dev $IFACE
    <%- begin -%>
      <%- range = IPAddr.new(ipadd)  -%>
    <%- rescue -%>
      <%- scope.function_warning(["Invalid IP address: #{ipadd}"]) -%>
      <%- next -%>
    <%- end -%>
    <%- unless defaultgw.empty? or default_gw_set -%>
      <%- addtrg = IPAddr.new(defaultgw) -%>
      <%- if range.include?(addtrg) -%>
        <%- default_gw_set = true -%>
post-up ip route add default via <%= defaultgw %>
      <%- else -%>
#default gateway <%= defaultgw %> not in range <%= range %>
      <%- end -%>
    <%- else -%>
#A default gateway is not necessary for this network
    <%- end -%>
    <%- if routecfg.include?(card) -%>
      <%- routecfg[card].each do | duplet| -%>
<%= 'post-up ip route add '+duplet.split('@')[0]+'/'+duplet.split('@')[1]+' dev $IFACE' %>
      <%- end -%>
    <%- else -%>
<%= '#This network is not routed' %>
    <%- end -%>
  <%- end -%>
<% end -%>
