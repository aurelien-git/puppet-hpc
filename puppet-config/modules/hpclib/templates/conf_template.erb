<% ########################################################################## -%>
<% #  Puppet configuration file                                             # -%>
<% #                                                                        # -%>
<% #  Copyright (C) 2014-2017 EDF S.A.                                      # -%>
<% #  Contact: CCN-HPC <dsp-cspit-ccn-hpc@edf.fr>                           # -%>
<% #                                                                        # -%>
<% #  This program is free software; you can redistribute in and/or         # -%>
<% #  modify it under the terms of the GNU General Public License,          # -%>
<% #  version 2, as published by the Free Software Foundation.              # -%>
<% #  This program is distributed in the hope that it will be useful,       # -%>
<% #  but WITHOUT ANY WARRANTY; without even the implied warranty of        # -%>
<% #  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         # -%>
<% #  GNU General Public License for more details.                          # -%>
<% ########################################################################## -%>
<%
conf  = @data
style = @style

def entry_to_string(orig_key, entry)
  if @upper_case_keys
    key = orig_key.upcase
  else
    key = orig_key
  end
  result = ""
  if @exceptions.include?(key)
    sep = @excep_separator
  else
    sep = @separator
  end
  if entry.is_a? String
    result += "#{key}#{sep}#{entry}"
  else
    if entry.key?('comment') and !entry['comment'].empty?
      result += "#{@comments} #{entry['comment']}\n"
    end
    result += "#{key}#{sep}#{entry['value']}"
  end

  return result
end

-%>
<%= @comments %>####################################################################
<%= @comments %> NOTE: This file is automatically generated by puppet.
<%= @comments %> Changes to this file will be overwritten periodically by puppet!
<%= @comments %>####################################################################
<%= @comments %> TEMPLATE: {<%= @name %>}/<%= File.basename(__FILE__) %>}
<%= @comments %> STYLE   : <%=@style%>
<%= @comments %>####################################################################
<% case style -%>
  <%- when 'ini' -%>
  <%- conf.each do | section, content | -%>
<%= '['+section+']' %>
    <%- if not content.is_a?(::Hash)
          raise "Content of section #{section} (#{@name}) is not a Hash (#{content}), not valid for an 'ini' style file."   
        end
    -%>
    <%- content.each do | key, kcont | -%>
<%= entry_to_string(key, kcont) %>
    <%- end -%>

  <%- end -%>
  <%- when 'keyval' -%>
  <%- conf.sort.map do | key, kcont | -%>
<%= entry_to_string(key, kcont) %>
  <%- end %>
  <%- when 'linebyline' -%>
  <%- conf.each do | element | -%>
<%= element %>
  <%- end -%>
  <%- when 'yaml' -%>
<%= conf.to_yaml() %>
<% end -%>
