#!/bin/bash
#####################################################################
# Automatic generation of SSH keys for users
#####################################################################
# NOTE: This file is automatically generated by puppet.
# Changes to this file will be overwritten periodically by puppet!
#####################################################################
# TEMPLATE: {<%= @name %>}/<%= File.basename(__FILE__) %>}
#####################################################################

CLUSTER="<%= @cluster %>"
USERS_GROUPS="<%= @authorized_users_groups %>"
SSH_KEY_TYPE="<%= @autogen_key_type %>"
SSH_KEY_LENGTH="<%= @autogen_key_length %>"
SSH_KEY_NAME="id_${SSH_KEY_TYPE}_${SSH_KEY_LENGTH}_${CLUSTER}"
SSH_KEY_PATH="${HOME}/.ssh/${SSH_KEY_NAME}"
unset USEROK

for group in $USERS_GROUPS ; do
        if [ -d ${HOME} ] && [ "`id -u`" -ne 0 ] && grep -q $group <(id -Gn $USER)
        then
              USEROK=1
              break
        else
              unset USEROK
        fi
done

if [ $USEROK ]
then
        if [ ! -f ${SSH_KEY_PATH} ]
        then
                echo "Generating a new SSH key for $CLUSTER internal use"
                if [ ! -d $HOME/.ssh ]
                then
                        mkdir $HOME/.ssh
                        chmod 700 $HOME/.ssh
                fi
                ssh-keygen -t $SSH_KEY_TYPE -b $SSH_KEY_LENGTH -C "$CLUSTER" -q -f $SSH_KEY_PATH -N ""
        fi
        NB_KEYS=$(grep $(cut -f2 -d' ' ${SSH_KEY_PATH}.pub) $HOME/.ssh/authorized_keys | wc -l)
        if [ "$NB_KEYS" -lt 1 ]
        then
            cat ${SSH_KEY_PATH}.pub >> $HOME/.ssh/authorized_keys
        fi
        chmod 600 $HOME/.ssh/authorized_keys

        if ! grep -q ${SSH_KEY_NAME} $HOME/.ssh/config 2>/dev/null; then
                echo "IdentityFile $SSH_KEY_PATH" >> $HOME/.ssh/config
        fi
fi
